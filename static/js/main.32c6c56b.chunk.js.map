{"version":3,"sources":["redux/reducers/userReducer.js","redux/reducers/dataReducer.js","redux/reducers/uiReducer.js","redux/store.js","redux/types.js","redux/actions/userActions.js","util/MyButton.js","redux/actions/dataActions.js","components/scream/PostScream.js","components/layout/Notifications.js","components/layout/Navbar.js","util/AuthRoute.js","components/scream/DeleteScream.js","components/scream/Comments.js","components/scream/CommentForm.js","components/scream/LikeButton.js","components/scream/ScreamDialog.js","components/scream/Scream.js","components/profile/EditDetails.js","util/ProfileSkeleton.js","components/profile/Profile.js","util/ScreamSkeleton.js","pages/home.js","pages/login.js","pages/signup.js","components/profile/StaticProfile.js","pages/user.js","App.js","util/theme.js","serviceWorker.js","index.js","images/no_img.png","images/pengsu.jpg"],"names":["initialState","authenticated","loading","credentials","likes","notifications","screams","scream","errors","middleware","thunk","reducers","combineReducers","user","state","arguments","length","undefined","action","type","Object","objectSpread","payload","concat","toConsumableArray","userHandle","handle","screamId","filter","like","forEach","not","read","data","index","findIndex","splice","comments","UI","store","createStore","compose","applyMiddleware","apply","window","__REDUX_DEVTOOLS_EXTENSION__","logoutUser","dispatch","localStorage","removeItem","axios","defaults","headers","common","getUserData","get","then","res","catch","err","console","log","setAuthorizationHeader","token","FBIdToken","setItem","MyButton","_ref","children","onClick","tip","btnClassName","tipClassName","react_default","a","createElement","Tooltip_default","title","className","placement","IconButton_default","clearErrors","PostScream","open","body","handleOpen","_this","setState","handleClose","props","handleChange","event","defineProperty","target","name","value","handleSubmit","preventDefault","postScream","nextProps","this","_this$props","classes","react","Add_default","Dialog_default","onClose","fullWidth","maxWidth","closeButton","Close_default","DialogTitle_default","DialogContent_default","onSubmit","TextField_default","label","multiline","rows","placeholder","error","helperText","onChange","Button_default","variant","color","submitButton","disable","CircularProgress_default","size","progressSpinner","Component","connect","newScream","post","response","withStyles","theme","position","float","marginTop","progressSniper","left","top","Notifications","anchorEl","onMenuOpened","unreadNotificationsIds","map","notificationId","markNotificationsRead","notificationsIcon","_this2","dayjs","extend","relativeTime","Badge_default","badgeContent","Notifications_default","notificationsMarkup","verb","time","createdAt","fromNow","iconColor","icon","Favorite_default","style","marginRight","Chat_default","MenuItem_default","key","Typography_default","component","Link","to","recipient","sender","aria-owns","aria-haspopup","Menu_default","Boolean","onEntered","notificationIds","Navbar","AppBar_default","Toolbar_default","scream_PostScream","react_router_dom","Home_default","layout_Notifications","rest","objectWithoutProperties","react_router","assign","render","DeleteScream","_Component","_getPrototypeOf2","classCallCheck","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","deleteScream","inherits","createClass","deleteButton","DeleteOutline_default","DialogActions_default","delete","Comments","Grid_default","container","comment","userImage","item","sm","src","alt","commentImage","commentData","format","invisibleSeparator","visibleSeparator","height","objectFit","borderRadius","marginLeft","CommentForm","submitComment","textAlign","textField","button","LikeButton","likedScream","find","likeScream","unlikeScream","FavoriteBorder_default","mapActionsToProps","ScreamDialog","oldPath","newPath","location","pathname","history","pushState","getScream","openDialog","_this$props2","_this$props2$scream","likeCount","commentCount","dialogMarkup","spinnerDiv","thickness","spacing","profileImage","invisiableSeparator","scream_LikeButton","scream_CommentForm","scream_Comments","expandButton","UnfoldMore_default","dialogContent","padding","marginBottom","Scream","_this$props$scream","_this$props$user","scream_DeleteScream","Card_default","card","CardMedia_default","image","CardContent_default","content","scream_ScreamDialog","display","minWidth","EditDetails","bio","website","mapUserDetailsToState","userDetails","editUserDetails","Edit_default","ProfileSkeleton","Paper_default","paper","profile","no_img","fullLine","LocationOn_default","Link_default","CalendarToday_default","protoTypes","PropTypes","object","isRequired","backgroundColor","palette","primary","main","width","margin","halfLine","Profile","handleImageChange","files","formData","FormData","append","uploadImage","handleEditpicture","document","getElementById","click","handleLogout","_this$props$user$cred","imageUrl","util_ProfileSkeleton","classeName","id","hidden","core_Link_default","href","rel","KeyboardReturn_default","profile_EditDetails","papper","align","buttons","CardContent","flexDirection","cover","date","from","cardContent","home","getScreams","_this$props$data","recentScreamsMarkup","util_ScreamSkeleton","scream_Scream","xs","profile_Profile","paload","login","userData","email","password","loginUser","form","AppIcon","pageTitle","noValidate","general","customError","disabled","progress","push","signup","newUserData","confirmPassword","signupUser","alert","_props$profile","screamIdParam","match","params","screamsMarkup","profile_StaticProfile","createMuiTheme","light","dark","contrastText","secondary","typography","useNextVariants","fontSize","border","borderBottom","& .image-wrapper","& button","& .profile-image","& .profile-details","& span, svg","verticalAlign","& a","& hr","& svg.button","&:hover","cursor","baseURL","jwtDecode","exp","Date","now","App","MuiThemeProvider_default","es","layout_Navbar","exact","path","util_AuthRoute","hostname","ReactDOM","src_App_0","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.32c6c56b.chunk.js","sourcesContent":["import { SET_USER, SET_AUTHENTICATED, SET_UNAUTHENTICATED, LOADING_USER, LIKE_SCREAM, UNLIKE_SCREAM, MARK_NOTIFICATIONS_READ } from '../types';\r\n\r\nconst initialState = {\r\n    authenticated: false,\r\n    loading: false,\r\n    credentials: {},\r\n    likes: [],\r\n    notifications: []\r\n};\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        // 권한이 있는지만 확인 하는 용도로 사용되기에 주석처리함.\r\n        // case SET_AUTHENTICATED:\r\n        //     return {\r\n        //         ...state,\r\n        //         authenticated: true\r\n        //     };\r\n        case SET_UNAUTHENTICATED:\r\n            return initialState;\r\n        case SET_USER:\r\n            return {\r\n                authenticated: true,\r\n                loading: false,\r\n                ...action.payload\r\n            };\r\n        case LOADING_USER:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                authenticated: true\r\n            };\r\n        case LIKE_SCREAM:\r\n            return {\r\n                ...state,\r\n                likes: [\r\n                    ...state.likes,\r\n                    {\r\n                        userHandle: state.credentials.handle,\r\n                        screamId: action.payload.screamId\r\n                    }\r\n                ]\r\n            };\r\n        case UNLIKE_SCREAM:\r\n            return {\r\n                ...state,\r\n                likes: state.likes.filter(\r\n                    (like) => like.screamId !== action.payload.screamId\r\n                )\r\n            };\r\n        case MARK_NOTIFICATIONS_READ:\r\n            state.notifications.forEach(not => not.read = true);\r\n            return{\r\n                ...state\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { \r\n    SET_SCREAMS, \r\n    LIKE_SCREAM, \r\n    UNLIKE_SCREAM, \r\n    LOADING_DATA, \r\n    DELETE_SCREAM, \r\n    POST_SCREAM, \r\n    SET_SCREAM,\r\n    SUBMIT_COMMENT\r\n} from '../types';\r\n\r\nconst initialState = {\r\n    screams: [],\r\n    scream: {},\r\n    loading: false\r\n};\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case LOADING_DATA:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        case SET_SCREAMS:\r\n            return{\r\n                ...state,\r\n                screams: action.payload,\r\n                loading: false\r\n            };\r\n        case SET_SCREAM:\r\n            return {\r\n                ...state,\r\n                scream: action.payload\r\n            };\r\n        case LIKE_SCREAM:\r\n        case UNLIKE_SCREAM:\r\n            let index = state.screams.findIndex((scream) => scream.screamId === action.payload.screamId);\r\n            state.screams[index] = action.payload;\r\n            if(state.scream.screamId === action.payload.screamId){\r\n                state.scream = action.payload; \r\n            }\r\n            return {\r\n                ...state\r\n            };\r\n        case DELETE_SCREAM:\r\n            // action을 통해 받은 screamId와 현재 scream의 screamId를 비교하고 같으면 index에 findindex한 값을  저장\r\n            index = state.screams.findIndex((scream) => scream.screamId === action.payload);\r\n            // 현재 state에 screams의 인덱스부터 첫번째, 즉 자기자신만 꺼냄\r\n            state.screams.splice(index, 1);\r\n            return {\r\n                ...state\r\n            };\r\n        case POST_SCREAM:\r\n            return {\r\n                ...state,\r\n                screams: [\r\n                    action.payload,\r\n                    ...state.screams\r\n                ]\r\n            };\r\n        // spread state해서 현재의 scraem안의 comments에 action의 payload로 받은 comment를 현재의 scream에 넣는다.\r\n        case SUBMIT_COMMENT:\r\n            return {\r\n                ...state,\r\n                scream: {\r\n                    ...state.screams,\r\n                    comments: [\r\n                        action.payload, \r\n                        ...state.scream.comments\r\n                    ]\r\n                }\r\n            };\r\n        default: \r\n            return state;\r\n    }\r\n}","import { SET_ERRORS, CLEAR_ERRORS, LOADING_UI, STOP_LOADING_UI } from '../types';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    errors: null\r\n};\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case SET_ERRORS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errors: action.payload\r\n            };\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errors: null\r\n            };\r\n        case LOADING_UI:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        case STOP_LOADING_UI:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            };\r\n        default: \r\n            return state;\r\n    }\r\n};","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport userReducer from './reducers/userReducer';\r\nimport dataReducer from './reducers/dataReducer';\r\nimport uiReducer from './reducers/uiReducer';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst reducers = combineReducers({\r\n    user: userReducer,\r\n    data: dataReducer,\r\n    UI: uiReducer\r\n});\r\n\r\nconst store  = createStore(\r\n    reducers, \r\n    initialState, \r\n    compose(\r\n        applyMiddleware(...middleware),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )\r\n);\r\n\r\nexport default store;","// User reducer types\r\nexport const SET_AUTHENTICATED = 'SET_AUTHENTICATED'\r\nexport const SET_UNAUTHENTICATED = 'SET_UNAUTHENTICATED'\r\nexport const SET_USER = 'SET_USER';\r\nexport const LOADING_USER = 'LOADING_USER';\r\nexport const MARK_NOTIFICATIONS_READ = 'MARK_NOTIFICATIONS_READ';\r\n// UI reducer types\r\nexport const SET_ERRORS = 'SET_ERRORS';\r\nexport const LOADING_UI = 'LOADING_UI';\r\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';\r\nexport const LOADING_DATA = 'LOADING_DATA';\r\nexport const STOP_LOADING_UI = 'STOP_LOADING_UI';\r\n// Data reducer types\r\nexport const SET_SCREAMS = 'SET_SCREAMS';\r\nexport const SET_SCREAM = 'SET_SCREAM';\r\nexport const LIKE_SCREAM = 'LIKE_SCREAM';\r\nexport const UNLIKE_SCREAM = 'UNLIKE_SCREAM';\r\nexport const DELETE_SCREAM = 'DELETE_SCREAM';\r\nexport const POST_SCREAM = 'POST_SCREAM';\r\nexport const SUBMIT_COMMENT = \"SUBMIT_COMMENT\";","import { SET_USER, SET_ERRORS, CLEAR_ERRORS, LOADING_UI, SET_UNAUTHENTICATED, LOADING_USER, MARK_NOTIFICATIONS_READ } from '../types';\r\nimport axios from 'axios';\r\n\r\nexport const loginUser = (userData, history) => (dispatch) => {\r\n    dispatch({ type: LOADING_UI });\r\n    axios.post('/login', userData)\r\n    .then((res) => {\r\n        setAuthorizationHeader(res.data.token);\r\n        dispatch(getUserData());\r\n        dispatch({ type: CLEAR_ERRORS });\r\n        history.push('/');\r\n    })\r\n    .catch((err) => {\r\n        dispatch({\r\n            type: SET_ERRORS,\r\n            payload: err.response.data\r\n        })\r\n    });\r\n};\r\n\r\nexport const signupUser = (newUserData, history) => (dispatch) => {\r\n    dispatch({ type: LOADING_UI });\r\n    axios.post('/signup', newUserData)\r\n        .then((res) => {\r\n            setAuthorizationHeader(res.data.token);\r\n            dispatch(getUserData());\r\n            dispatch({ type: CLEAR_ERRORS });\r\n            alert(`${newUserData.handle}님 회원가입을 축하드립니다. 다시 로그인 해주세요.`);\r\n            history.push('/login');\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: SET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        });\r\n};\r\n\r\nexport const logoutUser = () => (dispatch) => {\r\n    localStorage.removeItem('FBIdToken');\r\n    delete axios.defaults.headers.common['Authorization'];\r\n    dispatch({ type: SET_UNAUTHENTICATED });\r\n};\r\n\r\nexport const getUserData = () => (dispatch) => {\r\n    dispatch({ type: LOADING_USER });\r\n    axios.get('/user')\r\n        .then(res => {\r\n            dispatch({\r\n                type: SET_USER,\r\n                payload: res.data\r\n            })\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const uploadImage = (formData) => (dispatch) => {\r\n    dispatch({ type: LOADING_USER });\r\n    axios.post('/user/image', formData)\r\n        .then(() => {\r\n            dispatch(getUserData());\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const editUserDetails = (userDetails) => (dispatch) => {\r\n    dispatch({ type: LOADING_USER });\r\n    axios.post('/user', userDetails)\r\n        .then(() => {\r\n            dispatch(getUserData());\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const markNotificationsRead = (notificationIds) => dispatch => {\r\n    axios.post(`/notifications`, notificationIds)\r\n        .then(res => {\r\n            dispatch({\r\n                type: MARK_NOTIFICATIONS_READ\r\n            })\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nconst setAuthorizationHeader = (token) => {\r\n    const FBIdToken = `Bearer ${token}`;\r\n    localStorage.setItem('FBIdToken', FBIdToken);\r\n    axios.defaults.headers.common['Authorization'] = FBIdToken;\r\n};","import React from 'react';\r\n\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nexport default({ children, onClick, tip, btnClassName, tipClassName }) => (\r\n    <Tooltip title={tip} className={tipClassName} placement=\"top\">\r\n        <IconButton onClick={onClick} className={btnClassName}>\r\n            {children}\r\n        </IconButton>\r\n    </Tooltip>\r\n);\r\n","import { \r\n    SET_SCREAMS, \r\n    LOADING_DATA, \r\n    LIKE_SCREAM, \r\n    UNLIKE_SCREAM, \r\n    DELETE_SCREAM, \r\n    POST_SCREAM, \r\n    SET_ERRORS, \r\n    CLEAR_ERRORS,\r\n    LOADING_UI,\r\n    SET_SCREAM,\r\n    STOP_LOADING_UI,\r\n    SUBMIT_COMMENT\r\n} from '../types';\r\nimport axios from 'axios';\r\n\r\n// Get all screams\r\nexport const getScreams = () => dispatch => {\r\n    dispatch({ type: LOADING_DATA });\r\n    axios.get('/screams')\r\n        .then(res => {\r\n            dispatch({\r\n                type: SET_SCREAMS,\r\n                payload: res.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type: SET_SCREAMS,\r\n                paload: []\r\n            })\r\n        })\r\n}\r\n// get scream\r\nexport const getScream = (screamId) => dispatch => {\r\n    console.log(screamId, \"dispatch전 screamId\")\r\n    dispatch({ type: LOADING_UI });\r\n    console.log(screamId, ': screamId');\r\n    axios.get(`/scream/${screamId}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: SET_SCREAM,\r\n                payload: res.data\r\n            });\r\n            dispatch({ type: STOP_LOADING_UI });\r\n        })\r\n        .catch((err) => console.log(err));\r\n}\r\n\r\n// Post a scream\r\nexport const postScream = (newScream) => (dispatch) => {\r\n    dispatch({ type: LOADING_UI });\r\n    axios.post('/scream', newScream)\r\n        .then(res => {\r\n            dispatch({\r\n                type: POST_SCREAM,\r\n                payload: res.data\r\n            });\r\n            dispatch(clearErrors());\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type: SET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        })\r\n}\r\n// Like a scream\r\nexport const likeScream = (screamId) => dispatch => {\r\n    axios.get(`/scream/${screamId}/like`)\r\n        .then(res => {\r\n            console.log(res.data);\r\n            dispatch({\r\n                type: LIKE_SCREAM,\r\n                payload: res.data\r\n            })\r\n        })\r\n        .catch(err => console.log(err));\r\n}\r\n\r\n// Unlike a scream\r\nexport const unlikeScream = (screamId) => dispatch => {\r\n    axios.get(`/scream/${screamId}/unlike`)\r\n        .then(res => {\r\n            console.log(res.data);\r\n            dispatch({\r\n                type: UNLIKE_SCREAM,\r\n                payload: res.data\r\n            })\r\n        })\r\n        .catch(err => console.log(err));\r\n}\r\n\r\n// Submit a comment\r\nexport const submitComment = (screamId, commentData) => dispatch => {\r\n    axios.post(`/scream/${screamId}/comment`, commentData)\r\n        .then(res => {\r\n            dispatch({\r\n                type: SUBMIT_COMMENT,\r\n                payload: res.data\r\n            });\r\n            dispatch(clearErrors());\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type: SET_ERRORS,\r\n                payload: err.response.data\r\n            });\r\n        });\r\n}\r\n\r\nexport const getUserData = (userHandle) => dispatch => {\r\n    dispatch({ type: LOADING_DATA });\r\n    axios.get(`/user/${userHandle}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: SET_SCREAMS,\r\n                payload: res.data.screams\r\n            });\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: SET_SCREAMS,\r\n                payload: null\r\n            });\r\n        });\r\n}\r\n\r\nexport const deleteScream = (screamId) => (dispatch) => {\r\n    axios.delete(`scream/${screamId}`)\r\n        .then(() => {\r\n            dispatch({ type: DELETE_SCREAM, payload: screamId})\r\n        })\r\n        .catch(err => console.log(err));\r\n}\r\n\r\nexport const clearErrors = () => dispatch => {\r\n    dispatch({ type: CLEAR_ERRORS });\r\n}","import React, { Component, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport MyButton from '../../util/MyButton';\r\n// MUI stuff\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n// Redux stuff\r\nimport { connect } from 'react-redux';\r\nimport { postScream, clearErrors } from '../../redux/actions/dataActions';\r\n\r\nconst styles = (theme) => ({\r\n    ...theme,\r\n    submitButton: {\r\n        position:'relative',\r\n        float: 'right',\r\n        marginTop: 10\r\n    },\r\n    progressSniper: {\r\n        position: 'absolute'\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        left: '91%',\r\n        top: '6%'\r\n    }\r\n});\r\n\r\nclass PostScream extends Component{\r\n    state = {\r\n        open: false,\r\n        body: '',\r\n        errors: {}\r\n    };\r\n    // componentWillUpdate(nextProps){\r\n    //     if(nextProps.UI.errors){\r\n    //         this.setState({ errors: nextProps.UI.errors });\r\n    //     }\r\n    //     if (!nextProps.UI.errors && !nextProps.UI.loading) {\r\n    //         this.setState({body:'', open: false, errors: {} });\r\n    //     }\r\n    // };\r\n    // static getDerivedStateFromProps(nextProps, prevState) {\r\n    //     if(nextProps.UI.errors){\r\n    //         return ({ errors: nextProps.UI.errors, open:'false'})\r\n    //     }\r\n    //     if(!nextProps.UI.errors && !nextProps.UI.loading && nextProps.open==='false'){\r\n    //         this.setState({open:'false'});\r\n\r\n    //         return ({body:'', open:'false', errors: {} });\r\n    //     }\r\n    //     return null;\r\n    // };\r\n    componentWillReceiveProps(nextProps) {\r\n        if(nextProps.UI.errors) {\r\n            this.setState({\r\n                errors: nextProps.UI.errors\r\n            });\r\n        }\r\n        if(!nextProps.UI.errors && !nextProps.UI.loading) {\r\n            this.setState({ body:'', open: false, errors: {}});\r\n        }\r\n    }\r\n    handleOpen = () => {\r\n        console.log(this.state.open, '1open됨?');\r\n        this.setState({ open: true });\r\n    };\r\n    handleClose = () => {\r\n        this.props.clearErrors();\r\n        this.setState({open: false, errors: {} });\r\n    };\r\n    handleChange = (event) => {\r\n        this.setState({ [event.target.name]: event.target.value })\r\n    };\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.postScream({ body: this.state.body });\r\n    };\r\n    render(){\r\n        const { errors } = this.state;\r\n        const { classes, UI: { loading }} = this.props;\r\n        console.log(this.state.open, '3open됨?');\r\n\r\n        return (\r\n            <Fragment>\r\n                <MyButton onClick={this.handleOpen} tip=\"게시글 쓰기\">\r\n                    <AddIcon/>\r\n                </MyButton>\r\n                <Dialog open={this.state.open} onClose={this.handleClose} fullWidth maxWidth=\"sm\">\r\n                    <MyButton tip=\"Close\" onClick={this.handleClose} tipClassName={classes.closeButton}>\r\n                        <CloseIcon/>\r\n                    </MyButton>\r\n                    <DialogTitle>게시글 등록</DialogTitle>\r\n                    <DialogContent>\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            <TextField \r\n                                name=\"body\" \r\n                                type=\"text\" \r\n                                label=\"게시글\" \r\n                                multiline \r\n                                rows=\"3\" \r\n                                placeholder=\"게시글 입력\" \r\n                                error={errors.body ? true : false}\r\n                                helperText={errors.body}\r\n                                onChange={this.handleChange}\r\n                                fullWidth\r\n                                />\r\n                            <Button type=\"submit\" variant=\"contained\" color=\"primary\"\r\n                                className={classes.submitButton} disable={loading}>\r\n                                    저장\r\n                                {loading && (\r\n                                    <CircularProgress size={30} className={classes.progressSpinner}/>\r\n                                )}\r\n                            </Button>\r\n                        </form>\r\n                    </DialogContent>\r\n                </Dialog>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nPostScream.propTypes = {\r\n    postScream: PropTypes.func.isRequired,\r\n    UI: PropTypes.object.isRequired,\r\n    clearErrors: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    UI: state.UI\r\n})\r\n\r\nexport default connect(mapStateToProps, { postScream, clearErrors })(withStyles(styles)(PostScream));","import React, { Component, Fragment } from 'react'\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport { Link } from 'react-router-dom';\r\nimport dayjs from 'dayjs';\r\nimport relativeTime from 'dayjs/plugin/relativeTime';\r\nimport PropTypes from 'prop-types';\r\n// MUI stuff\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Badge from '@material-ui/core/Badge';\r\n//Icons\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\n//Redux\r\nimport { connect } from 'react-redux';\r\nimport { markNotificationsRead } from '../../redux/actions/userActions';\r\n\r\nclass Notifications extends Component {\r\n    state = {\r\n        anchorEl: null\r\n    };\r\n\r\n    handleOpen = (event) => {\r\n        this.setState({ anchorEl: event.target });\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({ anchorEl: null});\r\n    }\r\n\r\n    onMenuOpened = () => {\r\n        let unreadNotificationsIds = \r\n            this.props.notifications.filter((not) => !not.read)\r\n                                    .map((not) => not.notificationId);\r\n        \r\n        this.props.markNotificationsRead(unreadNotificationsIds);\r\n    }\r\n    \r\n    render() {\r\n        const notifications = this.props.notifications;\r\n        const anchorEl = this.state.anchorEl;\r\n\r\n        dayjs.extend(relativeTime);\r\n\r\n        let notificationsIcon;\r\n        // Notifications가 있으면 if문 실행 아니면 esle실행\r\n        if(notifications && notifications.length > 0){\r\n            notifications.filter(not => not.read === false).length > 0 ? \r\n            (notificationsIcon = (\r\n                <Badge badgeContent={notifications.filter(not => not.read === false).length}\r\n                    color = \"secondary\">\r\n                        <NotificationsIcon/>\r\n                    </Badge>\r\n            )) : (\r\n                notificationsIcon = <NotificationsIcon/>\r\n            );\r\n        } else {\r\n            notificationsIcon = <NotificationsIcon/>\r\n        }\r\n\r\n        let notificationsMarkup = \r\n            notifications && notifications.length > 0 ? (\r\n                notifications.map(not => {\r\n                    const verb = not.type === 'like' ? 'liked' : 'commented';\r\n                    const time = dayjs(not.createdAt).fromNow();\r\n                    const iconColor = not.read ? 'primary' : 'secondary';\r\n                    const icon = not.type === 'like' ? (\r\n                        <FavoriteIcon color={iconColor} style={{marginRight: 10}}/>\r\n                    ) : (\r\n                        <ChatIcon color={iconColor} style={{marginRight: 10}}/>\r\n                    )\r\n\r\n                    return (\r\n                        <MenuItem key={not.createdAt} onClick={this.handleClose}>\r\n                            {icon}\r\n                            <Typography\r\n                                component={Link}\r\n                                color=\"default\"\r\n                                variant=\"body1\"\r\n                                to={`/users/${not.recipient}/scream/${not.screamId}`}\r\n                            >\r\n                                {time} {not.sender}님이 게시물에 {verb}를 남겼습니다.\r\n                            </Typography>\r\n                        </MenuItem>\r\n                    )\r\n                })\r\n            ) : (\r\n                <MenuItem onClick={this.handleClose}>\r\n                    새 알림이 없습니다.\r\n                </MenuItem>\r\n            )\r\n\r\n        return (\r\n            <div>\r\n                <Fragment>\r\n                    <Tooltip placement=\"top\" title=\"알림\">\r\n                        <IconButton aria-owns={anchorEl ? 'simple-menu' : undefined}\r\n                        aria-haspopup=\"true\"\r\n                        onClick={this.handleOpen}\r\n                        >\r\n                            {notificationsIcon}\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                    <Menu\r\n                        anchorEl={anchorEl}\r\n                        open={Boolean(anchorEl)}\r\n                        onClose={this.handleClose}\r\n                        onEntered={this.onMenuOpened}\r\n                    >\r\n                            {notificationsMarkup}\r\n                        </Menu>\r\n                </Fragment>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nNotifications.propTypes = ({\r\n    markNotificationsRead: PropTypes.func.isRequired,\r\n    notifications: PropTypes.array.isRequired\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n    notifications: state.user.notifications\r\n});\r\n\r\nexport default connect(mapStateToProps, {markNotificationsRead})(Notifications);","import React, { Component, Fragment } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport MyButton from '../../util/MyButton';\r\nimport PropTypes from 'prop-types';\r\nimport PostScream from '../scream/PostScream';\r\nimport Notifications from './Notifications.js';\r\n// MUI stuff\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\n// Icons\r\nimport HomeIcon from '@material-ui/icons/Home';\r\n\r\nclass Navbar extends Component {\r\n    render() {\r\n        const { authenticated } = this.props;\r\n        return (\r\n            <AppBar>\r\n                <Toolbar className=\"nav-container\">\r\n                    {authenticated ? (\r\n                        <Fragment>\r\n                            <PostScream />\r\n                            <MyButton tip=\"홈으로\">\r\n                                <Link to=\"/\">                            \r\n                                    <HomeIcon/>\r\n                                </Link>\r\n                            </MyButton>\r\n                                <Notifications/>\r\n                        </Fragment>\r\n                    ) : (\r\n                        <Fragment>\r\n                            <Button color=\"inherit\" component={Link} to=\"/login\">\r\n                                Login\r\n                            </Button>\r\n                            <Button color=\"inherit\" component={Link} to=\"/\">\r\n                                Home\r\n                            </Button>\r\n                            <Button color=\"inherit\" component={Link} to=\"/signup\">\r\n                                Signup\r\n                            </Button>\r\n                        </Fragment>\r\n                    )}\r\n                </Toolbar>\r\n            </AppBar>\r\n        );\r\n    }\r\n}\r\n// authenticated가 true인이 false인지 확인\r\nNavbar.propTypes = {\r\n    authenticated: PropTypes.bool.isRequired\r\n}\r\n// 현재 state의 값을 props로 넣음\r\nconst mapStateToProps = state => ({\r\n    authenticated: state.user.authenticated\r\n})\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AuthRoute = ({ component: Component, authenticated, ...rest}) => (\r\n    <Route\r\n        {...rest}\r\n            render={(props) =>\r\n                authenticated === true ? <Redirect to='/'/> : <Component {...props} />\r\n        }\r\n    />\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n    authenticated: state.user.authenticated\r\n});\r\n\r\nAuthRoute.propTypes = {\r\n    user: PropTypes.object\r\n};\r\n\r\nexport default connect(mapStateToProps)(AuthRoute);","import React, { Component, Fragment } from 'react'\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport PropTypes from 'prop-types';\r\nimport MyButton from '../../util/MyButton';\r\n\r\n// MUI stuff\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { deleteScream } from '../../redux/actions/dataActions';\r\n\r\nconst styles = {\r\n    deleteButton: {\r\n        position: 'absolute',\r\n        left: '90%',\r\n        top: '10%'\r\n    }\r\n}\r\n\r\nexport class DeleteScream extends Component {\r\n    state = {\r\n        open: false\r\n    };\r\n    handleOpen = () => {\r\n        this.setState({ open: true });\r\n    };\r\n    handleClose = () => {\r\n        this.setState({ open: false });\r\n    };\r\n    deleteScream = () => {\r\n        this.props.deleteScream(this.props.screamId);\r\n        this.setState({ open: false });\r\n    };\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <Fragment>\r\n                <MyButton tip=\"삭제하기\"\r\n                    onClick={this.handleOpen}\r\n                    btnClassName={classes.deleteButton}\r\n                >\r\n                    <DeleteOutline color=\"secondary\"/>\r\n                </MyButton>\r\n                <Dialog open={this.state.open}\r\n                    onClose={this.handleClose}\r\n                    fullWidth\r\n                    maxWidth=\"sm\"\r\n                >\r\n                    <DialogTitle>\r\n                        정말로 삭제하시겠습니까?\r\n                    </DialogTitle>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"primary\">\r\n                            취소\r\n                        </Button>\r\n                    </DialogActions>\r\n                    <DialogActions>\r\n                        <Button onClick={this.deleteScream} color=\"secondary\">\r\n                            삭제\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nDeleteScream.propTypes = {\r\n    deleteScream: PropTypes.func.isRequired,\r\n    classes: PropTypes.object.isRequired,\r\n    screamId: PropTypes.string.isRequired\r\n}\r\n\r\nexport default connect(null, { deleteScream })(withStyles(styles)(DeleteScream));\r\n","import React, { Component, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport { Link } from 'react-router-dom';\r\nimport dayjs from 'dayjs';\r\n\r\n// MUI\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst styles = (theme) => ({\r\n    ...theme,\r\n    commentImage: {\r\n        maxWidth: '100%',\r\n        height: 100,\r\n        objectFit: 'cover',\r\n        borderRadius: '50%'\r\n    },\r\n    commentData: {\r\n        marginLeft: 20\r\n    }\r\n});\r\n\r\nclass Comments extends Component {\r\n    render() {\r\n        const { comments, classes } = this.props;\r\n        return (\r\n            <Grid container>\r\n                {comments.map((comment, index) => {\r\n                    const { body, createdAt, userImage, userHandle } = comment;\r\n                    return (\r\n                        <Fragment key={createdAt}>\r\n                            <Grid item sm={12}>\r\n                                <Grid container>\r\n                                    <Grid item sm={2}>\r\n                                        <img src={userImage} alt=\"comment\" className={classes.commentImage}/>\r\n                                    </Grid>\r\n                                    <Grid item sm={9}>\r\n                                        <div className={classes.commentData}>\r\n                                            <Typography \r\n                                                variant=\"h5\"\r\n                                                component={Link}\r\n                                                to={`/users/${userHandle}`}\r\n                                                color=\"primary\"\r\n                                            >\r\n                                                {userHandle}\r\n                                            </Typography>\r\n                                            <Typography variant=\"body2\" color=\"textSecondary\">\r\n                                                {dayjs(createdAt).format('h:mm a, YYYY-MM-DD')}\r\n                                            </Typography>\r\n                                            <hr className={classes.invisibleSeparator}/>\r\n                                            <Typography variant=\"body1\">{body}</Typography>\r\n                                        </div>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            {index !== comments.length-1 && (\r\n                                <hr className={classes.visibleSeparator} />\r\n                            )}\r\n                        </Fragment>\r\n                    )\r\n                })}\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nComments.propTypes = {\r\n    comments: PropTypes.array.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Comments);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\n\r\n// MUI\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n// Redux stuff\r\nimport { connect } from 'react-redux';\r\nimport { submitComment } from '../../redux/actions/dataActions';\r\n\r\nconst styles = (theme) => ({\r\n    ...theme\r\n});\r\n\r\nclass CommentForm extends Component {\r\n    state = {\r\n        body: '',\r\n        errors: {}\r\n    }\r\n\r\n    // static getDerivedStateFromProps(nextProps) {\r\n    //     if (nextProps.UI.errors){\r\n    //         return { errors: nextProps.UI.errors };\r\n    //     }\r\n    //     if(!nextProps.UI.errors && !nextProps.UI.loading){\r\n    //         this.setState({body: ''});\r\n    //     }\r\n    //     return null;\r\n    // };\r\n    componentWillReceiveProps(nextProps) {\r\n        if(nextProps.UI.errors) {\r\n            this.setState({\r\n                errors: nextProps.UI.errors\r\n            });\r\n        }\r\n        if(!nextProps.UI.errors && !nextProps.UI.loading) {\r\n            this.setState({ body:'', open: false, errors: {}});\r\n        }\r\n    }\r\n    handleChange = (event) => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    };\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.submitComment(this.props.screamId, { body: this.state.body });\r\n    };\r\n\r\n    render() {\r\n        const { classes, authenticated } = this.props;\r\n        const errors = this.state.errors;\r\n\r\n        const commentFormMarkup = authenticated ? (\r\n            <Grid item sm={12} style={ {textAlign:'center'} }>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <TextField\r\n                        name=\"body\"\r\n                        type=\"text\"\r\n                        label=\"글을 적으세요\"\r\n                        error={errors.comment ? true : false}\r\n                        helperText={errors.comment}\r\n                        onChange={this.handleChange}\r\n                        value={this.state.body}\r\n                        fullWidth\r\n                        className={classes.textField}\r\n                    />\r\n                    <Button type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.button}\r\n                    >\r\n                        댓글 저장\r\n                    </Button>\r\n                </form>\r\n                <hr className={classes.visibleSeparator} />\r\n            </Grid>\r\n        ) : null\r\n        return commentFormMarkup;\r\n    }\r\n}\r\n\r\nCommentForm.propTypes = {\r\n    submitComment: PropTypes.func.isRequired,\r\n    UI: PropTypes.object.isRequired,\r\n    screamId: PropTypes.string.isRequired,\r\n    authenticated: PropTypes.bool.isRequired,\r\n    classes: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    UI: state.UI,\r\n    authenticated: state.user.authenticated\r\n})\r\n\r\nexport default connect(mapStateToProps, { submitComment })(withStyles(styles)(CommentForm));\r\n","import React, { Component } from 'react';\r\nimport MyButton from '../../util/MyButton';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n// Icons\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\r\n// Redux\r\nimport { connect } from 'react-redux';\r\nimport { likeScream, unlikeScream } from '../../redux/actions/dataActions';\r\n\r\nexport class LikeButton extends Component {\r\n    // (현재 props의 user의 like)와 (like.screamId와 현재 props의 scream의 screamId가 같은게)가 같으면 true return\r\n    likedScream = () => {\r\n        if(this.props.user.likes && this.props.user.likes.find(\r\n            (like) => like.screamId === this.props.screamId\r\n            )\r\n        )\r\n            return true;\r\n        else return false;\r\n    };\r\n    likeScream = () => {\r\n        this.props.likeScream(this.props.screamId);\r\n    };\r\n    unlikeScream = () => {\r\n        this.props.unlikeScream(this.props.screamId);\r\n    };\r\n    render() {\r\n        const { authenticated } = this.props.user;\r\n        const likeButton = !authenticated ? (\r\n            <Link to=\"/login\">\r\n                <MyButton tip=\"Like\">\r\n                    <FavoriteBorder color=\"red\"/>\r\n                </MyButton>\r\n            </Link>\r\n        ) : this.likedScream() ? (\r\n            <MyButton tip=\"Undo like\" onClick={this.unlikeScream}>\r\n                <FavoriteIcon color=\"primary\"/>\r\n            </MyButton>\r\n        ) : (\r\n            <MyButton tip=\"Like\" onClick={this.likeScream}>\r\n                <FavoriteBorder color=\"primary\"/>\r\n            </MyButton>\r\n        );\r\n        return likeButton;\r\n    }\r\n}\r\n\r\nLikeButton.propTypes = {\r\n    likeScream: PropTypes.func.isRequired,\r\n    unlikeScream: PropTypes.func.isRequired,\r\n    user: PropTypes.object.isRequired,\r\n    screamId: PropTypes.string.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    user: state.user\r\n});\r\n\r\nconst mapActionsToProps = {\r\n    likeScream,\r\n    unlikeScream\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(LikeButton);\r\n","import React, { Component, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport MyButton from '../../util/MyButton';\r\nimport dayjs from 'dayjs';\r\nimport { Link } from 'react-router-dom';\r\nimport Comments from './Comments';\r\nimport CommentForm from './CommentForm';\r\n\r\n// MUI Stuff\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typegrphy from '@material-ui/core/Typography';\r\n// Icons\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport UnfoldMore from '@material-ui/icons/UnfoldMore';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\n// Redux Stuff\r\nimport { connect } from 'react-redux';\r\nimport { getScream, clearErrors } from '../../redux/actions/dataActions';\r\nimport LikeButton from './LikeButton';\r\n\r\nconst styles = (theme) => ({\r\n    ...theme,\r\n    profileImage: {\r\n        maxWidth: 200,\r\n        height: 200,\r\n        borderRadius: '50%',\r\n        objectFit: 'cover'\r\n    },\r\n    dialogContent: {\r\n        padding: 20\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        left: '90%'\r\n    },\r\n    expandButton: {\r\n        position: 'absolute',\r\n        left: '90%'\r\n    },\r\n    spinnerDiv: {\r\n        textAlign: 'center',\r\n        marginTop: 50,\r\n        marginBottom: 50\r\n    }\r\n});\r\n\r\nclass ScreamDialog extends Component {\r\n    state = {\r\n        open: false,\r\n        oldPath: '',\r\n        newPath: ''\r\n    };\r\n\r\n    // 렌더링을 마친 후 만약 Scream에서 props로 받은 openDialog가 true일 경우 handleOpen()실행\r\n    // false로 값을 받아오는 경우는 없기에 else문은 필요없음\r\n    componentDidMount() {\r\n        if(this.props.openDialog){\r\n            this.handleOpen();\r\n        }\r\n    };\r\n\r\n    handleOpen = () => {\r\n        // handleOpen()이 실행 될때 실행한 시점의 값을 선언\r\n        let oldPath = window.location.pathname;\r\n\r\n        const { userHandle, screamId } = this.props;\r\n        // param 값을 엔드포인트 형식으로 저장\r\n        const newPath = `/users/${userHandle}/scream/${screamId}`;\r\n        // handleOpen()이 실행 될때 실행한 시점의 값(oldPath)와 param 값을 엔드포인트 형식으로 저장한 값(newPath)\r\n        // 같다면 (user페이지로 가서 scream을 봤다는 뜻) 그 user의 page로 oldPath로 저장함.\r\n        if(oldPath === newPath) oldPath=`/users/${userHandle}`;\r\n\r\n        window.history.pushState(null, null, newPath);\r\n\r\n        this.setState({ open: true, oldPath, newPath });\r\n        this.props.getScream(this.props.screamId);\r\n        // console.log(this.props.screamId, \"props로 받아온\")\r\n    };\r\n\r\n    handleClose = () => {\r\n        // oldPath에 저장된 값의 위치로 이동. \r\n        window.history.pushState(null, null, this.state.oldPath);\r\n        this.setState ({ open: false });\r\n        this.props.clearErrors();\r\n    };\r\n\r\n    render() {\r\n        const { classes, \r\n                scream: { \r\n                    screamId, \r\n                    body, \r\n                    createdAt, \r\n                    likeCount, \r\n                    commentCount, \r\n                    userImage, \r\n                    userHandle,\r\n                    comments\r\n                }, \r\n                UI: { loading } \r\n            } = this.props;\r\n        \r\n        const dialogMarkup = loading ? (\r\n            <div className={classes.spinnerDiv}>\r\n                <CircularProgress size={200} thickness={2}/>\r\n            </div>\r\n        ) : (\r\n            <Grid container spacing={16}>\r\n                <Grid item sm={5}>\r\n                    <img src={userImage} alt=\"profile\" className={classes.profileImage} />\r\n                </Grid>\r\n                <Grid item sm={7}>\r\n                    <Typegrphy\r\n                        component={Link}\r\n                        color=\"primary\"\r\n                        variant=\"h5\"\r\n                        to={`/users/${userHandle}`}\r\n                    >\r\n                        @{userHandle}\r\n                    </Typegrphy>\r\n                    <hr className={classes.invisiableSeparator} />\r\n                    <Typegrphy variant=\"body2\" color=\"textSecondary\">\r\n                        {dayjs(createdAt).format('h:mm a, MMMM DD YYYY')}\r\n                    </Typegrphy>\r\n                    <hr className={classes.invisiableSeparator} />\r\n                    <Typegrphy variant=\"body1\">\r\n                        {body}\r\n                    </Typegrphy>\r\n                    <LikeButton screamId={screamId} />\r\n                    <span>{likeCount} 좋아요</span>\r\n                    <MyButton top=\"comments\">\r\n                        <ChatIcon color=\"primary\"/>\r\n                    </MyButton>\r\n                    <span>{commentCount} 댓글 수</span>\r\n                </Grid>\r\n                <hr className={classes.visibleSeparator} />\r\n                <CommentForm screamId={screamId} />\r\n                <Comments comments={comments} />\r\n            </Grid>\r\n        );\r\n\r\n        return (\r\n            <Fragment>\r\n                <MyButton onClick={this.handleOpen} tip=\"게시물 더 보기\" tipClassName={classes.expandButton}>\r\n                    <UnfoldMore color=\"primary\" />\r\n                </MyButton>\r\n                <Dialog\r\n                    open={this.state.open}\r\n                    onClose={this.handleClose}\r\n                    fullWidth\r\n                    maxWidth=\"sm\"\r\n                >\r\n                    <MyButton\r\n                        tip=\"닫기\"\r\n                        onClick={this.handleClose}\r\n                        tipClassName={classes.closeButton}\r\n                    >\r\n                        <CloseIcon />\r\n                    </MyButton>\r\n                    <DialogContent className={classes.dialogContent}>\r\n                        {/* {console.log(screamId, \"첫번째 screamId\")} */}\r\n                        {dialogMarkup}\r\n                    </DialogContent>\r\n                </Dialog>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nScreamDialog.propTypes = {\r\n    getScream: PropTypes.func.isRequired,\r\n    screamId: PropTypes.string.isRequired,\r\n    userHandle: PropTypes.string.isRequired,\r\n    scream: PropTypes.object.isRequired,\r\n    UI: PropTypes.object.isRequired,\r\n    clearErrors: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    scream: state.data.scream,\r\n    UI: state.UI\r\n});\r\n\r\nconst mapActionsToProps = {\r\n    getScream,\r\n    clearErrors\r\n};\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(ScreamDialog));\r\n","import React, { Component } from 'react'\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport { Link } from 'react-router-dom';\r\nimport dayjs from 'dayjs';\r\nimport relativeTime from 'dayjs/plugin/relativeTime';\r\nimport PropTypes from 'prop-types';\r\nimport MyButton from '../../util/MyButton';\r\nimport DeleteScream from './DeleteScream';\r\nimport ScreamDialog from './ScreamDialog';\r\nimport LikeButton from './LikeButton';\r\n\r\n// MUI stuff\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n// Icons\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\n\r\n// Redux stuff\r\nimport { connect } from 'react-redux'; \r\n\r\nconst styles = {\r\n    card: {\r\n        position: 'relative',\r\n        display: 'flex',\r\n        marginBottom: 20,\r\n    },\r\n    image: {\r\n        minWidth: 200,\r\n    },\r\n    content: {\r\n        padding: 25,\r\n        objectFit: 'cover'\r\n    }\r\n}\r\n\r\nclass Scream extends Component {\r\n    render() {\r\n        dayjs.extend(relativeTime);\r\n        const { \r\n            classes, \r\n            scream: { \r\n                body, createdAt, userImage, userHandle, screamId, likeCount, commentCount \r\n            },\r\n            user: {\r\n                authenticated,\r\n                credentials: {handle}\r\n            }\r\n        } =this.props;\r\n\r\n        // const classes = this.props.classes;\r\n        // authenticated가 있고 현재 scream의 userHandle과, user의 handle이 같으면 DeleteScream 실행\r\n        const deleteButton = authenticated && userHandle === handle ? (\r\n            <DeleteScream screamId={screamId}/>\r\n        ) : null;\r\n\r\n        return (\r\n            <Card className={classes.card}>\r\n                <CardMedia\r\n                    image={userImage}\r\n                    title=\"Profile image\"\r\n                    className={classes.image}\r\n                />\r\n                <CardContent className={classes.content}>\r\n                    <Typography variant=\"h5\" component={Link} to={`/users/${userHandle}`} color=\"primary\">\r\n                        {userHandle}\r\n                    </Typography>\r\n                    {deleteButton}\r\n                    <Typography variant=\"body2\" color=\"textSecondary\">{dayjs(createdAt).fromNow( )}</Typography>\r\n                    <Typography variant=\"body1\">{body}</Typography>\r\n                    <LikeButton screamId={screamId} />\r\n                    <span>{likeCount} 좋아요</span>\r\n                    <MyButton top=\"comments\">\r\n                        <ChatIcon color=\"primary\"/>\r\n                    </MyButton>\r\n                    <span>{commentCount} 댓글 수</span>\r\n                    {/* props로 받은 openDialog를 ScreamDialog로 보냄*/}\r\n                    <ScreamDialog screamId={screamId} userHandle={userHandle} openDialog={this.props.openDialog}/>\r\n                </CardContent>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n// profile.js와 다른점은 현재는 user을 통해 authenticated를 object형으로 가져옴\r\n// profile.js에서는 user의 authentication을 가져온거라 bool형으로 가져옴\r\n// openDialog는 user.js에서 받은 값을 props로 받아 위의 ScreamDialog로 보내줌\r\nScream.propTypes = {\r\n    user: PropTypes.object.isRequired,\r\n    scream: PropTypes.object.isRequired,\r\n    classes: PropTypes.object.isRequired,\r\n    openDialog: PropTypes.bool\r\n}\r\n\r\n const mapStateToProps = state => ({\r\n     user: state.user\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps)(withStyles(styles)(Scream));\r\n","import React, { Component, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport MyButton from '../../util/MyButton';\r\n// Redux stuff\r\nimport { connect } from 'react-redux';\r\nimport { editUserDetails } from '../../redux/actions/userActions';\r\n// MUI stuff\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n// Icons\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nconst styles = (theme) => ({\r\n    ...theme,\r\n    button: {\r\n        float: 'right'\r\n    }\r\n});\r\n\r\nclass EditDetails extends Component {\r\n    // 현재 state 초기화\r\n    state = {\r\n        bio: '',\r\n        website: '',\r\n        location: '',\r\n        open: false\r\n    };\r\n\r\n    mapUserDetailsToState = (credentials) => {\r\n        this.setState({\r\n            bio: credentials.bio ? credentials.bio : '',\r\n            website: credentials.website ? credentials.website : '',\r\n            location: credentials.location ? credentials.location : ''\r\n        });\r\n    };\r\n\r\n    handleOpen = () => {\r\n        this.setState({ open: true })\r\n        this.mapUserDetailsToState(this.props.credentials);\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ open: false });\r\n    };\r\n\r\n    // rendering 전 컴포넌트에 props를 가져옴\r\n    componentDidMount(){\r\n        const { credentials } = this.props;\r\n        this.mapUserDetailsToState(credentials);\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        // [] 여러 target이 있기 대문에 사용\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    };\r\n    // 위에 handleChange에서 저장한 state값을 userDetails로 저장, editUserDetails로 Action실행.\r\n    handleSubmit = () => {\r\n        const userDetails = {\r\n            bio: this.state.bio,\r\n            website: this.state.website,\r\n            location: this.state.location\r\n        };\r\n        this.props.editUserDetails(userDetails);\r\n        this.handleClose();\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <Fragment>\r\n                <MyButton tip=\"회원 정보변경\" onClick={this.handleOpen} btnClassName={classes.button}>\r\n                    <EditIcon color=\"primary\"/>\r\n                </MyButton>\r\n                <Dialog \r\n                    open={this.state.open}\r\n                    onClose={this.handleClose}\r\n                    fullWidth\r\n                    maxWidth=\"sm\">\r\n                        <DialogTitle>회원 정보를 수정</DialogTitle>\r\n                        <DialogContent>\r\n                            <form>\r\n                                <TextField\r\n                                    name=\"bio\"\r\n                                    type=\"text\"\r\n                                    label=\"Bio\"\r\n                                    multiline\r\n                                    placeholder=\"성별을 입력하세요\"\r\n                                    className={classes.textField}\r\n                                    value={this.state.bio}\r\n                                    onChange={this.handleChange}\r\n                                    fullWidth\r\n                                />\r\n                                <TextField\r\n                                    name=\"website\"\r\n                                    type=\"text\"\r\n                                    label=\"Website\"\r\n                                    multiline\r\n                                    placeholder=\"개인 블로그 및 사이트를 입력하세요\"\r\n                                    className={classes.textField}\r\n                                    value={this.state.website}\r\n                                    onChange={this.handleChange}\r\n                                    fullWidth\r\n                                />\r\n                                <TextField\r\n                                    name=\"location\"\r\n                                    type=\"text\"\r\n                                    label=\"Location\"\r\n                                    multiline\r\n                                    placeholder=\"주소지를 입력하세요\"\r\n                                    className={classes.textField}\r\n                                    value={this.state.location}\r\n                                    onChange={this.handleChange}\r\n                                    fullWidth\r\n                                />\r\n                            </form>\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button onClick={this.handleClose} color=\"primary\">\r\n                                취소\r\n                            </Button>\r\n                            <Button onClick={this.handleSubmit} color=\"primary\">\r\n                                저장\r\n                            </Button>\r\n                        </DialogActions>\r\n                </Dialog>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nEditDetails.propTypes = {\r\n    editUserDetails: PropTypes.func.isRequired,\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    credentials: state.user.credentials\r\n});\r\n\r\nexport default connect(mapStateToProps, { editUserDetails })(withStyles(styles)(EditDetails));\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport no_img from '../images/no_img.png';\r\n// MUI\r\nimport Paper from '@material-ui/core/Paper';\r\n// Icons\r\nimport LocationOn from '@material-ui/icons/LocationOn';\r\nimport LinkIcon from '@material-ui/icons/Link';\r\nimport CalendarToday from '@material-ui/icons/CalendarToday';\r\n\r\nconst styles = (theme) => ({\r\n    ...theme,\r\n    handle: {\r\n        height: 20,\r\n        backgroundColor: theme.palette.primary.main,\r\n        width: 60,\r\n        margin: '0 auto 7px auto'\r\n    },\r\n    fullLine: {\r\n        height: 15,\r\n        backgroundColor: 'rgba(0,0,0, 0.6)',\r\n        width: '100%',\r\n        marginBottom: 10\r\n    },\r\n    halfLine: {\r\n        height: 15,\r\n        backgroundColor: 'rgba(0,0,0, 0.6)',\r\n        width: '50%',\r\n        marginBottom: 10\r\n    }\r\n});\r\n\r\nconst ProfileSkeleton = (props) => {\r\n    const { classes } = props;\r\n\r\n    return (\r\n        <Paper className={classes.paper}>\r\n            <div className={classes.profile}>\r\n                <div className=\"image-wrapper\">\r\n                    <img src={no_img} alt=\"profile\" className=\"profile-image\"/>\r\n                </div>\r\n                <hr/>\r\n                <div className=\"profile-details\">\r\n                    <div className={classes.handle}/>\r\n                    <hr/>\r\n                    <div className={classes.fullLine}/>\r\n                    <div className={classes.fullLine}/>\r\n                    <hr/>\r\n                    <LocationOn color=\"primary\"/> <span>Location</span>\r\n                    <hr/>\r\n                    <LinkIcon color=\"primary\"/> https://website.com\r\n                    <hr/>\r\n                    <CalendarToday color=\"primary\"/> 가입일\r\n                </div>\r\n            </div>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nProfileSkeleton.protoTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(ProfileSkeleton);\r\n","import React, { Component, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport { Link } from 'react-router-dom';\r\nimport dayjs from 'dayjs';\r\nimport EditDetails from './EditDetails';\r\nimport MyButton from '../../util/MyButton';\r\nimport ProfileSkeleton from '../../util/ProfileSkeleton';\r\n\r\n// MUI stuff\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport MuiLink from '@material-ui/core/Link';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n// redux\r\nimport { connect } from 'react-redux';\r\nimport { logoutUser, uploadImage } from '../../redux/actions/userActions';\r\n\r\n// Icons\r\nimport LocationOn from '@material-ui/icons/LocationOn';\r\nimport LinkIcon from '@material-ui/icons/Link';\r\nimport CalendarToday from '@material-ui/icons/CalendarToday';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport KeyboardReturn from '@material-ui/icons/KeyboardReturn';\r\n\r\nconst styles = (theme) => ({\r\n  ...theme\r\n});\r\n\r\nclass Profile extends Component {\r\n  handleImageChange = (event) => {\r\n    const image = event.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append('image', image, image.name);\r\n    this.props.uploadImage(formData);\r\n  };\r\n  handleEditpicture = () => {\r\n    const fileInput = document.getElementById('imageInput');\r\n    fileInput.click();\r\n  };\r\n  handleLogout = () => {\r\n    this.props.logoutUser();\r\n  };\r\n    render() {\r\n        const { \r\n            classes,\r\n            user: { \r\n                credentials: { handle, createdAt, imageUrl, bio, website, location }, \r\n                loading,\r\n                authenticated\r\n            }\r\n        } = this.props;\r\n\r\n        let profileMarkup = !loading ? (authenticated ? (\r\n            <Paper classeName={classes.paper}>\r\n                <div className={classes.profile}>\r\n                    <div className=\"image-wrapper\">\r\n                        <img src={imageUrl} alt=\"profile\" className=\"profile-image\"/>\r\n                        <input \r\n                          type=\"file\" \r\n                          id=\"imageInput\" \r\n                          onChange={this.handleImageChange}\r\n                          hidden=\"hidden\"\r\n                        />\r\n                        <MyButton tip=\"사진 변경하기\" onClick={this.handleEditpicture} btnClassName=\"button\">\r\n                          <EditIcon color=\"primary\"/>\r\n                        </MyButton>\r\n                    </div>\r\n                    <hr />\r\n                    <div className=\"profile-details\">\r\n                        <MuiLink component={Link} to={`/users/${handle}`} color=\"primary\" variant=\"h5\">\r\n                            @{handle}\r\n                        </MuiLink>\r\n                    <hr/>\r\n                    {bio && <Typography variant=\"body2\">{bio}</Typography>}\r\n                    <hr />\r\n                    {location && (\r\n                        <Fragment>\r\n                            <LocationOn color=\"primary\"/> <span>{location}</span>\r\n                        </Fragment>\r\n                    )}\r\n                    <hr />\r\n                    {website && (\r\n                        <Fragment>\r\n                            <LinkIcon color=\"primary\"/>\r\n                            <a href={website} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                {' '}{website}\r\n                            </a>\r\n                            <hr/>\r\n                        </Fragment>\r\n                    )}\r\n                    <CalendarToday color=\"primary\"/>{' '}\r\n                    <span>Joined {dayjs(createdAt).format('YYYY.MM')}</span>\r\n                    </div>\r\n                    <MyButton tip=\"로그아웃\" onClick={this.handleLogout}>\r\n                          <KeyboardReturn color=\"primary\"/>\r\n                    </MyButton>\r\n                    <EditDetails />\r\n                </div>\r\n            </Paper>\r\n        ) : (\r\n            <Paper className={classes.papper}>\r\n              <Typography variant=\"body2\" align=\"center\">\r\n                로그인이 필요합니다.\r\n              </Typography>\r\n              <div className={classes.buttons}>\r\n                <Button variant=\"contained\" color=\"primary\" component={Link} to=\"/login\">\r\n                  Signin\r\n                </Button>\r\n              </div>\r\n            </Paper>\r\n        )) : (<ProfileSkeleton/>)\r\n\r\n        return profileMarkup;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    user: state.user\r\n});\r\n\r\nconst mapActionsToProps ={ logoutUser, uploadImage };\r\n\r\nProfile.propTypes = {\r\n  logoutUser: PropTypes.func.isRequired,\r\n  uploadImage: PropTypes.func.isRequired,\r\n  user: PropTypes.object.isRequired,\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(Profile));\r\n","import React, { Fragment } from 'react';\r\nimport no_img from '../images/no_img.png';\r\nimport PropTypes from 'prop-types';\r\n// MUI\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\n\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\n\r\nconst styles = theme => ({\r\n    card: {\r\n        display: 'flex',\r\n        marginBottom: 20\r\n    },\r\n    CardContent: {\r\n        width: '100%',\r\n        flexDirection: 'column',\r\n        padding: 25\r\n    },\r\n    cover: {\r\n        minWidth: 200,\r\n        objectFit: 'cover'\r\n    },\r\n    handle: {\r\n        width: 60,\r\n        height: 20,\r\n        backgroundColor: theme.palette.primary.main,\r\n        marginBottom: 7\r\n    },\r\n    date: {\r\n        height: 14,\r\n        width: 100,\r\n        backgroundColor: 'rgba(0,0,0, 0.3)',\r\n        marginBottom: 10\r\n    },\r\n    fullLine: {\r\n        height: 15,\r\n        width: '90%',\r\n        backgroundColor: 'rgba(0,0,0, 0.6)',\r\n        marginBottom: 10\r\n    },\r\n    halfLine: {\r\n        height: 15,\r\n        width: '50%',\r\n        backgroundColor: 'rgba(0,0,0, 0.6)',\r\n        marginBottom: 10\r\n    }\r\n});\r\n\r\nconst ScreamSkeleton = (props) => {\r\n    const { classes } = props;\r\n\r\n    const content = Array.from({ length: 5 }).map((item, index) => (\r\n        <Card className={classes.card} key={index}>\r\n            <CardMedia className={classes.cover} image={no_img}/>\r\n            <CardContent className={classes.cardContent}>\r\n                <div className={classes.handle}/>\r\n                <div className={classes.date}/>\r\n                <div className={classes.fullLine}/>\r\n                <div className={classes.fullLine}/>\r\n                <div className={classes.halfLine}/>\r\n            </CardContent>\r\n        </Card>\r\n    ));\r\n\r\n    return <Fragment>{content}</Fragment>\r\n};\r\n\r\nScreamSkeleton.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(ScreamSkeleton);","import React, { Component } from 'react'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Scream from '../components/scream/Scream';\r\nimport Profile from '../components/profile/Profile';\r\nimport { connect } from 'react-redux';\r\nimport { getScreams } from '../redux/actions/dataActions';\r\nimport ScreamSkeleton from '../util/ScreamSkeleton';\r\n\r\nclass home extends Component {\r\n    componentDidMount(){\r\n        this.props.getScreams();\r\n    }\r\n    render() {\r\n        const { screams, loading } = this.props.data;\r\n        let recentScreamsMarkup = !loading ? (\r\n            screams.map((scream) => <Scream key={scream.screamId} scream={scream}/>)\r\n        ) : (<ScreamSkeleton/>);\r\n        return (\r\n            <Grid container spacing={16}>\r\n                <Grid item sm={8} xs={12}>\r\n                    {recentScreamsMarkup}\r\n                </Grid>\r\n                <Grid item sm={4} xs={12}>\r\n                    <Profile/>\r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nhome.propTypes = {\r\n    getScreams: PropTypes.func.isRequired,\r\n    data: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    data: state.data\r\n})\r\n\r\nexport default connect(mapStateToProps, { getScreams })(home);\r\n","import React, { Component } from 'react'\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport PropTypes from 'prop-types';\r\nimport AppIcon from '../images/pengsu.jpg';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// MUI stuff\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n// Redux stuff\r\nimport { connect } from 'react-redux';\r\nimport { loginUser } from '../redux/actions/userActions';\r\n\r\nconst styles = (theme) => ({\r\n    ...theme\r\n});\r\n\r\nclass login extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            errors: {}\r\n        };\r\n    }\r\n    // React 버전 변경으로 인해 컴포넌트 사용관련 변경사항있어 수정\r\n    // componentWillReceiveProps(nextProps) {\r\n    //     if (nextProps.UI.errors){\r\n    //         this.setState({ errors: nextProps.UI.errors });\r\n    //     }\r\n    // }\r\n    static getDerivedStateFromProps(nextProps) {\r\n        if (nextProps.UI.errors){\r\n            return { errors: nextProps.UI.errors };\r\n        }\r\n        return null;\r\n    };\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const userData = {\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        };\r\n        this.props.loginUser(userData, this.props.history);\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    };\r\n    \r\n    render() {\r\n        const { classes, UI: { loading } } = this.props;\r\n        const { errors } = this.state;\r\n\r\n        return (\r\n            <Grid container className={classes.form}>\r\n                <Grid item sm/>\r\n                <Grid item sm>\r\n                    <img src={AppIcon} alt=\"pengsu\" className={classes.image}/>\r\n                    <Typography variant=\"h2\" className={classes.pageTitle}>\r\n                        Login\r\n                    </Typography>\r\n                    <form noValidate onSubmit={this.handleSubmit}>\r\n                        <TextField \r\n                            id=\"email\" \r\n                            name=\"email\" \r\n                            type=\"email\" \r\n                            label=\"이메일\" \r\n                            className={classes.textField}\r\n                            value={this.state.email} \r\n                            onChange={this.handleChange} \r\n                            helperText={errors.email} \r\n                            error={errors.email ? true : false} \r\n                            fullWidth\r\n                        />\r\n                        <TextField \r\n                            id=\"password\" \r\n                            name=\"password\" \r\n                            type=\"password\" \r\n                            label=\"비밀번호\" \r\n                            className={classes.textField}\r\n                            value={this.state.password} \r\n                            onChange={this.handleChange} \r\n                            helperText={errors.password} \r\n                            error={errors.password ? true : false} \r\n                            fullWidth\r\n                        />\r\n                        {errors.general && (\r\n                            <Typography variant=\"body2\" className={classes.customError}>\r\n                                {errors.general}\r\n                            </Typography>\r\n                        )}\r\n                        <Button \r\n                            type=\"submit\" \r\n                            variant=\"contained\" \r\n                            color=\"primary\" \r\n                            label=\"로그인\" \r\n                            className={classes.button}\r\n                            disabled={loading}\r\n                        >\r\n                            로그인\r\n                            {loading && (\r\n                                <CircularProgress size={30} className={classes.progress}/>\r\n                            )}\r\n                        </Button>\r\n                        <br/>   \r\n                        <small>\r\n                            아이디가 없으신가요? <Link to=\"/signup\"> ☞회원가입하러 가기 </Link>\r\n                        </small>\r\n                    </form>\r\n                </Grid>\r\n                <Grid item sm/>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nlogin.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    loginUser: PropTypes.func.isRequired,\r\n    user: PropTypes.object.isRequired,\r\n    UI: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    user: state.user,\r\n    UI: state.UI\r\n});\r\n\r\nconst mapActionsToProps = {\r\n    loginUser\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(login));","import React, { Component } from 'react'\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport PropTypes from 'prop-types';\r\nimport AppIcon from '../images/pengsu.jpg';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// MUI stuff\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n// redux\r\nimport { connect } from 'react-redux';\r\nimport { signupUser } from '../redux/actions/userActions';\r\n\r\nconst styles = (theme) => ({\r\n    ...theme\r\n});\r\n\r\nclass signup extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n            handle: '',\r\n            errors: {}\r\n        };\r\n    }\r\n\r\n    static getDerivedStateFromProps(nextProps) {\r\n        if (nextProps.UI.errors){\r\n            return { errors: nextProps.UI.errors };\r\n        }\r\n        return null;\r\n    };\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const newUserData = {\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n            confirmPassword: this.state.confirmPassword,\r\n            handle: this.state.handle\r\n        };\r\n        this.props.signupUser(newUserData, this.props.history);\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    render() {\r\n        const { classes, UI: { loading } } = this.props;\r\n        const { errors } = this.state;\r\n\r\n        return (\r\n            <Grid container className={classes.form}>\r\n                <Grid item sm/>\r\n                <Grid item sm>\r\n                    <img src={AppIcon} alt=\"pengsu\" className={classes.image}/>\r\n                    <Typography variant=\"h2\" className={classes.pageTitle}>\r\n                        회원가입\r\n                    </Typography>\r\n                    <form noValidate onSubmit={this.handleSubmit}>\r\n                        <TextField \r\n                            id=\"email\" \r\n                            name=\"email\" \r\n                            type=\"email\" \r\n                            label=\"이메일\" \r\n                            className={classes.textField}\r\n                            value={this.state.email} \r\n                            onChange={this.handleChange} \r\n                            helperText={errors.email} \r\n                            error={errors.email ? true : false} \r\n                            fullWidth\r\n                        />\r\n                        <TextField \r\n                            id=\"password\" \r\n                            name=\"password\" \r\n                            type=\"password\" \r\n                            label=\"비밀번호\" \r\n                            className={classes.textField}\r\n                            value={this.state.password} \r\n                            onChange={this.handleChange} \r\n                            helperText={errors.password} \r\n                            error={errors.password ? true : false} \r\n                            fullWidth\r\n                        />\r\n                        <TextField \r\n                            id=\"confirmPassword\" \r\n                            name=\"confirmPassword\" \r\n                            type=\"password\" \r\n                            label=\"비밀번호 재확인\" \r\n                            className={classes.textField}\r\n                            value={this.state.confirmPassword}\r\n                            onChange={this.handleChange} \r\n                            helperText={errors.confirmPassword}\r\n                            error={errors.confirmPassword ? true : false} \r\n                            fullWidth\r\n                        />\r\n                        <TextField \r\n                            id=\"handle\" \r\n                            name=\"handle\" \r\n                            type=\"text\" \r\n                            label=\"아이디\" \r\n                            className={classes.textField}\r\n                            value={this.state.handle}\r\n                            onChange={this.handleChange} \r\n                            helperText={errors.handle}\r\n                            error={errors.handle ? true : false} \r\n                            fullWidth\r\n                        />\r\n                        {errors.general && (\r\n                            <Typography variant=\"body2\" className={classes.customError}>\r\n                                {errors.general}\r\n                            </Typography>\r\n                        )}\r\n                        <Button \r\n                            type=\"submit\" \r\n                            variant=\"contained\" \r\n                            color=\"primary\" \r\n                            label=\"회원가입\" \r\n                            className={classes.button}\r\n                            disabled={loading}\r\n                        >\r\n                            회원가입\r\n                            {loading && (\r\n                                <CircularProgress size={30} className={classes.progress}/>\r\n                            )}\r\n                        </Button>\r\n                        <br/>   \r\n                        <small>\r\n                            이미 아이디가 있으신가요? <Link to=\"/login\"> ☞로그인하러 가기 </Link>\r\n                        </small>\r\n                    </form>\r\n                </Grid>\r\n                <Grid item sm/>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nsignup.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    user: PropTypes.object.isRequired,\r\n    UI: PropTypes.object.isRequired,\r\n    signupUser: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    user: state.user,\r\n    UI: state.UI\r\n});\r\n\r\nexport default connect(mapStateToProps, { signupUser })(withStyles(styles)(signup));","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport dayjs from 'dayjs';\r\nimport {Link} from 'react-router-dom';\r\n// MUI\r\nimport MuiLink from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\n// Icons\r\nimport LocationOn from '@material-ui/icons/LocationOn';\r\nimport LinkIcon from '@material-ui/icons/Link';\r\nimport CalendarToday from '@material-ui/icons/CalendarToday';\r\n\r\nconst styles = (theme) => ({\r\n    ...theme\r\n});\r\n\r\nconst StaticProfile = (props) => {\r\n    const { classes, profile: { handle, createdAt, imageUrl, bio, website, location }} = props;\r\n\r\n    return (\r\n        <Paper classeName={classes.paper}>\r\n            <div className={classes.profile}>\r\n                <div className=\"image-wrapper\">\r\n                    <img src={imageUrl} alt=\"profile\" className=\"profile-image\"/>\r\n                </div>\r\n                <hr />\r\n                <div className=\"profile-details\">\r\n                    <MuiLink component={Link} to={`/user/${handle}`} color=\"primary\" variant=\"h5\">\r\n                        @{handle}\r\n                    </MuiLink>\r\n                <hr/>\r\n                {bio && <Typography variant=\"body2\">{bio}</Typography>}\r\n                <hr />\r\n                {location && (\r\n                    <Fragment>\r\n                        <LocationOn color=\"primary\"/> <span>{location}</span>\r\n                    </Fragment>\r\n                )}\r\n                <hr />\r\n                {website && (\r\n                    <Fragment>\r\n                        <LinkIcon color=\"primary\"/>\r\n                        <a href={website} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                            {' '}{website}\r\n                        </a>\r\n                        <hr/>\r\n                    </Fragment>\r\n                )}\r\n                <CalendarToday color=\"primary\"/>{' '}\r\n                <span>Joined {dayjs(createdAt).format('YYYY.MM')}</span>\r\n                </div>\r\n            </div>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nStaticProfile.propTypes = {\r\n    profile: PropTypes.object.isRequired,\r\n    classes: PropTypes.object.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(StaticProfile);","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport axios from 'axios';\r\nimport Scream from '../components/scream/Scream';\r\nimport StaticProfile from '../components/profile/StaticProfile';\r\nimport ScreamSkeleton from '../util/ScreamSkeleton';\r\nimport ProfileSkeleton from '../util/ProfileSkeleton';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { getUserData } from '../redux/actions/dataActions';\r\n\r\nclass user extends Component {\r\n    state = {\r\n        profile: null,\r\n        screamIdParam: null\r\n    };\r\n\r\n    componentDidMount(){\r\n        const handle = this.props.match.params.handle;\r\n        // App.js에서 param 값으로 받은 screamId를 선언\r\n        const screamId = this.props.match.params.screamId;\r\n\r\n        // App.js에서 param 값으로 받은 screamId를 선언한게 있으면  state에 저장\r\n        if(screamId) \r\n            this.setState({ screamIdParam: screamId });\r\n\r\n        this.props.getUserData(handle);\r\n        axios.get(`/user/${handle}`)\r\n            .then(res => {\r\n                this.setState({\r\n                    profile: res.data.user\r\n                })\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n    render() {\r\n        const { screamIdParam } = this.state;\r\n        const { screams, loading } = this.props.data;\r\n\r\n        const screamsMarkup = loading ? (\r\n            <ScreamSkeleton/>\r\n        ) : screams === null ? (\r\n            <p>게시글이 없습니다.</p>\r\n        ) : !screamIdParam ? (\r\n            // param값으로 받은 게 아니면, 현재 state에 저장된 screamIdParam값이 null일때 실행\r\n            screams.map((scream) => <Scream key={scream.screamId} scream={scream} />)\r\n        ) : (\r\n            // screamIdParam이 있을때 실행\r\n            screams.map(scream => {\r\n                if(scream.screamId !== screamIdParam)\r\n                // 한번 더 걸러내줌 App.js에서 온 screamId값이랑 Scream에서의 screamId값이 같이 않을 때 return\r\n                    return <Scream key={scream.screamId} scream={scream} />\r\n                // App.js에서 온 screamId값이랑 Scream에서의 screamId값이 같을 때 return\r\n                // openDialog는 true로 보내, App.js에서 온 것을 여기서 같다고 한 것을 true형태로 Scream.js로 보내줌\r\n                else return <Scream key={scream.screamId} scream={scream} openDialog />\r\n            })\r\n        )\r\n        return (\r\n            <Grid container>\r\n                <Grid item sm={8} xs={12}>\r\n                    {screamsMarkup}\r\n                </Grid>\r\n                <Grid item sm={4} xs={12}>\r\n                    {this.state.profile === null ? (\r\n                        <ProfileSkeleton/>\r\n                    ) : (<StaticProfile profile={this.state.profile}/>\r\n                    )}\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nuser.propTypes = {\r\n    getUserData: PropTypes.func.isRequired,\r\n    data: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    data: state.data\r\n})\r\n\r\nexport default connect(mapStateToProps, {getUserData})(user);\r\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\nimport createMuiTheme from '@material-ui/core/styles/createMuiTheme';\nimport themeFile from './util/theme';\nimport jwtDecode from 'jwt-decode';\n//Redux\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { SET_AUTHENTICATED } from './redux/types';\nimport { logoutUser, getUserData } from './redux/actions/userActions';\n// Components\nimport Navbar from './components/layout/Navbar';\nimport AuthRoute from './util/AuthRoute';\n//pages\nimport home from './pages/home';\nimport login from './pages/login';\nimport signup from './pages/signup';\nimport user from './pages/user';\n\nimport axios from 'axios';\n\nconst theme = createMuiTheme(themeFile);\n\naxios.defaults.baseURL = 'https://us-central1-socialapp-ee961.cloudfunctions.net/api';\n\nconst token = localStorage.FBIdToken;\nif(token){\n  const decodedToken = jwtDecode(token);\n  if(decodedToken.exp * 1000 < Date.now()){\n    store.dispatch(logoutUser());\n    window.location.href = '/login';\n  } else {\n    // 권한이 있는지만 확인 하는 용도로 사용되기에 주석처리함.\n    // store.dispatch({ type: SET_AUTHENTICATED });\n    axios.defaults.headers.common['Authorization'] = token;\n    store.dispatch(getUserData());\n  }\n}\n\nclass App extends Component { \n  render() {\n    return (\n      <MuiThemeProvider theme={theme}>\n        <Provider store={store}>\n          <div className=\"App\">\n            <Router>\n              <Navbar />\n              <div className=\"container\">\n                <Switch>\n                  <Route exact path=\"/Socialapp\" component={home}/>\n                  <AuthRoute exact path=\"/Socialapp/login\" component={login} />\n                  <AuthRoute exact path=\"/Socialapp/signup\" component={signup} />\n                  <Route exact path=\"/Socialapp/users/:handle\" component={user} />\n                  <Route exact path=\"/Socialapp/users/:handle/scream/:screamId\" component={user}/>\n                </Switch>\n              </div>\n            </Router>\n          </div>\n        </Provider>\n      </MuiThemeProvider>\n    );\n  };\n}\n\nexport default App;\n","export default {\r\n    palette: {\r\n        primary: {\r\n            light: '#33c9dc',\r\n            main: '#00bcd4',\r\n            dark: '#008394',\r\n            contrastText: '#fff'\r\n        },\r\n        secondary: {\r\n            light: '#ff6333',\r\n            main: '#ff3d00',\r\n            dark: '#b22a00',\r\n            contrastText: '#fff'\r\n        }\r\n    },\r\n    typography: {\r\n        useNextVariants: true\r\n    },\r\n    form: {\r\n        textAlign: 'center'\r\n    },\r\n    image: {\r\n        margin: '20px auto',\r\n        width: 500,\r\n        height: 200\r\n    },\r\n    pageTitle: {\r\n        margin: '10px auto'\r\n    },\r\n    textField: {\r\n        margin: '10px auto'\r\n    },\r\n    button: {\r\n        marginTop: 20,\r\n        position: 'relative'\r\n    },\r\n    customError: {\r\n        color: 'red',\r\n        fontSize: '0.8rem'\r\n    },\r\n    progress: {\r\n        position: 'absolute'\r\n    },\r\n    invisiableSeparator: {\r\n        border: 'none',\r\n        margin: 4\r\n    },\r\n    visibleSeparator: {\r\n        width: '100%',\r\n        borderBottom: '1px solid rgba(0,0,0,0.1)',\r\n        marginBottom: 20\r\n    },\r\n    paper: {\r\n        padding: 20\r\n    },\r\n    profile: {\r\n        '& .image-wrapper': {\r\n            textAlign: 'center',\r\n            position: 'relative',\r\n            '& button': {\r\n                position: 'absolute',\r\n                top: '80%',\r\n                left: '70%'\r\n            }\r\n        },\r\n        '& .profile-image': {\r\n            width: 200,\r\n            height: 200,\r\n            objectFit: 'cover',\r\n            maxWidth: '100%',\r\n            borderRadius: '50%'\r\n        },\r\n        '& .profile-details': {\r\n            textAlign: 'center',\r\n            '& span, svg': {\r\n            verticalAlign: 'middle'\r\n            },\r\n            '& a': {\r\n                color: '#00bcd4'\r\n            }\r\n        },\r\n        '& hr': {\r\n            border: 'none',\r\n            margin: '0 0 10px 0'\r\n        },\r\n        '& svg.button': {\r\n            '&:hover': {\r\n                cursor: 'pointer'\r\n            }\r\n        }\r\n    },\r\n    buttons: {\r\n        textAlign: 'center',\r\n        '& a': {\r\n            margin: '20px 10px'\r\n        }\r\n    }\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/no_img.5a021ab9.png\";","module.exports = __webpack_public_path__ + \"static/media/pengsu.85cd2ff0.jpg\";"],"sourceRoot":""}